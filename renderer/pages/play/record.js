import { useRouter } from "next/router";
import Head from "next/head";
import Image from "next/image";
import styles from "../../styles/Home.module.css";
import axios, { post } from "axios";

import React, { useState, useEffect, useRef } from "react";

let chunks = [];

export default function Record() {
  const router = useRouter();

  var [isRecordAvailable, SetIsRecordAvailable] = useState(false);
  var [mediaRecorder, SetImediaRecorder] = useState(null);
  var [recognizedData, SetrecognizedData] = useState({ prediction: "Empty, Start Recording", time_exec: 0 });

  const recordButtonRef = useRef();
  const recordAudioRef = useRef();

  useEffect(() => {
    if (navigator.mediaDevices.getUserMedia) {
      SetIsRecordAvailable(true);

      navigator.mediaDevices
        .getUserMedia({
          audio: true,
        })
        .then(onSuccess, onError);
    } else {
      SetIsRecordAvailable(false);
    }
  }, []);

  useEffect(() => {
    if (mediaRecorder !== null) {
      mediaRecorder.ondataavailable = function (e) {
        chunks.push(e.data);
      };

      mediaRecorder.onstop = ({ e }) => {
        console.log("data available after MediaRecorder.stop() called.");
        recordAudioRef.current.controls = true;

        const blob = new Blob(chunks, {
          type: "audio/wav; codecs=MS_PCM",
        });

        chunks = [];
        const audioURL = window.URL.createObjectURL(blob);
        recordAudioRef.current.src = audioURL;

        let file = new File([blob], "Lohe" + ".wav", {
          type: "audio/wav",
          lastModified: new Date().getTime(),
        });

        console.log(file);

        recordAudioRef.current.style.display = "";

        const formData = new FormData();
        formData.append("file_audio", file);
        post("http://127.0.0.1:3003/recognition", formData, {
          headers: {
            "content-type": "multipart/form-data",
          },
        })
          .then((response) => {
            console.log(response.data);
            SetrecognizedData(response.data)
          })
          .catch((error) => {
            console.log("Error ========>", error);
          });
      };
    }
  }, [mediaRecorder]);

  let onSuccess = function (stream) {
    SetImediaRecorder(new MediaRecorder(stream));
  };

  let onError = function (err) {
    console.log("The following error occured: " + err);
  };

  const start_record = () => {
    console.log("recorder started");
    mediaRecorder.start();
    recordButtonRef.current.innerText = "Recording...";
    recordButtonRef.current.disabled = true;

    setTimeout(() => {
      mediaRecorder.stop();
      console.log(mediaRecorder.state);
      console.log("recorder stopped");
      recordButtonRef.current.removeAttribute("disabled");
      recordButtonRef.current.innerText = "Record";
    }, 4000);
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Vibio</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>

      <main className={styles.main}>
        <div className={""}>
          {isRecordAvailable ? (
            <div align={"center"}>
              <button ref={recordButtonRef} onClick={start_record} id="record-button" className={"btn btn-primary"} style={{ margin: 10 }}>
                Record
              </button>
              <br></br>
              <audio ref={recordAudioRef} style={{ display: "" }} id="audio_preview_upload" controls={""} src={""}></audio>
              <br />
              <p>{recognizedData.prediction}</p>
              <p>Time : {recognizedData.time_exec}</p>
            </div>
          ) : (
            <p>Record Sound is not Available</p>
          )}
        </div>
      </main>

      <footer className={styles.footer}>
        <a href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app" target="_blank" rel="noopener noreferrer">
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}
