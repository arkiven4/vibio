import Head from "next/head";
import Image from "next/legacy/image";
import styles from "../styles/Home.module.css";
import stylesCustom from "../styles/custom.module.css";
import { useRouter } from "next/router";
import { useAppContext } from "../context/state";
import React, { useState, useEffect, useRef } from "react";
import { Preferences } from "@capacitor/preferences";

import { getLocale } from "../utils/getLocaleText";
import { FooterLogo } from "../components/general";

import { ModalAnnaouncement } from "../components/modal";

export default function Pengaturan({ localeData }) {
  const router = useRouter();
  const { userdata, setUserdata } = useAppContext();
  const localeGeneral = localeData.general;

  const inputServerRecog = useRef();
  const enableServerRecog = useRef();
  const [showModal, setShowModal] = useState(true);

  const [enableRecog, setEnableRecog] = useState("false");
  const [mainmusicVolume, setMainmusicVolume] = useState(0);

  const onOptionChangeEnableRecog = (e) => {
    setEnableRecog(e.target.value);
  };

  const onOptionChangeMusicSlider = (e) => {
    setMainmusicVolume(e.target.value);
  };

  useEffect(() => {
    setUserdata({
      username: "hola",
    });

    Preferences.get({ key: "enableRecog" }).then((ret) => {
      setEnableRecog(ret.value);
    });

    Preferences.get({ key: "mainmenu_music" }).then((ret) => {
      setMainmusicVolume(parseInt(ret.value));
    });
  }, []);

  function savePengaturan() {
    Preferences.set({
      key: "enableRecog",
      value: enableRecog,
    });

    Preferences.set({
      key: "mainmenu_music",
      value: mainmusicVolume.toString(),
    });

    router.push("/home");
  }

  function logout() {
    Preferences.remove({
      key: "user_uuid",
    });

    router.push("/login");
  }

  return (
    <div className={(styles.container, stylesCustom.backgound_image)} style={{ backgroundImage: "linear-gradient(rgba(36, 36, 36, 0.40), rgba(36, 36, 36, 0.40)), url('/bg2-uncom.jpg')" }}>
      <Head>
        <title>Vibio</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>

      <main className={styles.main}>
        {/* <button type="button" className="btn btn-primary">Warning</button> */}
        <h3 className={stylesCustom.menu_subtitle_font}>{localeGeneral.setting_title}</h3>
        <br></br>
        <div className={stylesCustom.container_card_row}>
          <div className={stylesCustom.card_menu_home} style={{ paddingBottom: "10px", backgroundColor: "grey" }}>
            <div style={{ display: "flex", flexDirection: "column", alignItems: "center" }}>
              <h2 className={stylesCustom.card_menu_title_font}>Enable Recog</h2>
              <div className={"form-check"}>
                <input
                  className="form-check-input"
                  type="radio"
                  name="enableRecog"
                  value="false"
                  id="false_recog"
                  defaultChecked={enableRecog == "false"}
                  onChange={onOptionChangeEnableRecog}
                />
                <label className="form-check-label" htmlFor="false_recog">
                  Disable
                </label>
              </div>
              <div className={"form-check"}>
                <input
                  className="form-check-input"
                  type="radio"
                  name="enableRecog"
                  value="true"
                  id="true_recog"
                  defaultChecked={enableRecog == "true"}
                  onChange={onOptionChangeEnableRecog}
                />
                <label className="form-check-label" htmlFor="true_recog">
                  Enable
                </label>
              </div>
            </div>
            <hr></hr>
            <div style={{ display: "flex", flexDirection: "column", alignItems: "center" }}>
              <h2 className={stylesCustom.card_menu_title_font}>Music Volume</h2>
              <div className={"form-check"}>
                <input type="range" class="form-range" id="customRange1" maxValue={100} minValue={0} value={mainmusicVolume} onChange={onOptionChangeMusicSlider} />
                <label for="customRange1" class="form-label">
                  {mainmusicVolume}%
                </label>
              </div>
            </div>
          </div>
          <div className={stylesCustom.button_card} onClick={() => savePengaturan()}>
            <h4 style={{ marginBottom: "0px", color: "green" }}>Simpan</h4>
          </div>
          <br></br>
          <div className={stylesCustom.button_card} onClick={() => logout()}>
            <h4 style={{ marginBottom: "0px", color: "red" }}>Logout</h4>
          </div>
        </div>
      </main>
      <audio controls loop autoPlay src={"/assets/music/bg-music1.wav"} style={{ display: "none" }}></audio>
      <div style={{ position: "absolute", top: "5vh", left: "5vh", cursor: "pointer" }} onClick={() => router.push("/home")}>
        <div className={stylesCustom.button_card}>
          <h4 style={{ marginBottom: "0px", color: "green" }}>Home</h4>
        </div>
      </div>
    </div>
  );
}

export async function getStaticProps(context) {
  var localeDataGeneral = getLocale("id", "general");
  return {
    props: {
      localeData: {
        general: localeDataGeneral,
      },
    },
  };
}
