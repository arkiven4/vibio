import Head from "next/head";
import Image from "next/image";
import styles from "../../styles/Home.module.css";
import stylesCustom from "../../styles/custom.module.css";

import { useRouter } from "next/router";
import React, { useState, useEffect, useRef } from "react";
import { useAppContext } from "../../context/state";
import { getJSONFlash } from "../../utils/getLocalJSON";
import { GenMengejaGambarData } from "../../utils/genQuizData";

import { motion } from "framer-motion";

const QuestionNumber = 10;

export default function PlayStart(props) {
  const router = useRouter();
  const { userdata, setUserdata } = useAppContext();

  const [quizData, setQuizData] = useState([]);
  const [indexQuestion, setIndexQuestion] = useState(0);
  const [rightQuestion, setRightQuestion] = useState(0);
  const [kategori, setKategori] = useState("");
  const [isPlay, setIsPlay] = useState(false);

  const AudioSoundRef = useRef();

  useEffect(() => {
    console.log(userdata);
    var finalQuestionData = GenMengejaGambarData(props.kategori_data, QuestionNumber);

    setQuizData(finalQuestionData);
    setKategori(router.query.category);

    setUserdata({
      username: "Apa iya",
    });

    //console.log(window.localStorage.getItem("userSession"));

    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  function playSound() {
    setIsPlay(true);
    if (!isPlay) {
      AudioSoundRef.current.play();
      setShowOption(true);
      // OptionsRef.current.scrollIntoView({
      //   behavior: "smooth",
      //   block: "start",
      //   inline: "nearest",
      // });
    }
  }

  function stopSound() {
    if (isPlay == true) {
      setIsPlay(false);
    }
  }

  function selectOption(choosed) {
    if (choosed) {
      console.log("Betul");
      setRightQuestion(rightQuestion + 1);
    } else {
      console.log("Salah");
    }

    if (QuestionNumber == indexQuestion + 1) {
      //Done
    } else {
      setIndexQuestion(indexQuestion + 1);
      // setShowOption(false);
      // PlayButtonRef.current.scrollIntoView({
      //   behavior: "smooth",
      //   block: "start",
      //   inline: "nearest",
      // });
    }
  }

  return (
    <div className={(styles.container, stylesCustom.backgound_image)} style={{ backgroundImage: "url('/bg2.jpg')" }}>
      <Head>
        <title>Vibio</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>

      {quizData.length != 0 ? (
        <main className={styles.main}>
          <div className="container" style={{ width: "50%", justifyContent: "center", marginBottom: "10vh" }}>
            <div className={stylesCustom.status_bar}>
              <div className={stylesCustom.mini_card}>
                <h4 style={{ marginBottom: "0px" }}>
                  Soal: {indexQuestion + 1} / {QuestionNumber}
                </h4>
              </div>
              <div className={stylesCustom.mini_card}>
                <h4 style={{ marginBottom: "0px", color: "green" }}>
                  Benar: {rightQuestion} / {QuestionNumber}
                </h4>
              </div>
            </div>
          </div>
          <div
            className={styles.grid}
            animate={{
              rotate: [0, -2, 2, -2, 0],
              scale: [1, 1, 1.01, 0.99, 1],
            }}
            transition={{
              duration: 2.5,
              ease: "easeInOut",
              times: [0, 0.4, 0.8, 1.1, 1.5],
              repeat: Infinity,
              repeatDelay: 1,
            }}
          >
            <div className={stylesCustom.card_option}>
              <Image
                onClick={() => {
                  playSound();
                }}
                src={`/assets/items/${kategori}/image/${quizData[indexQuestion].name}_${quizData[indexQuestion].imageNum}.png`}
                width={200}
                height={200}
                alt="BendaImage"
                style={{ cursor: "pointer" }}
              />
            </div>
          </div>

          <div className={stylesCustom.button_container} onClick={() => selectOption(false)}>
            <div className={stylesCustom.button_image_subtitle}>
              <Image
                onClick={() => {
                  playSound();
                }}
                src={`/assets/button_no.png`}
                width={"100%"}
                height={"100%"}
                alt="ButtonNo"
                style={{ cursor: "pointer" }}
              />
              <h4 style={{ marginBottom: "0px" }}>Salah</h4>
            </div>
            <div className={stylesCustom.button_image_subtitle} onClick={() => selectOption(true)}>
              <Image
                onClick={() => {
                  playSound();
                }}
                src={`/assets/button_ok.png`}
                width={"100%"}
                height={"100%"}
                alt="ButtonOK"
                style={{ cursor: "pointer" }}
              />
              <h4 style={{ marginBottom: "0px" }}>benar</h4>
            </div>
          </div>

          {/* <div id="PlayButton" ref={PlayButtonRef} className={`${showOption ? stylesCustom.fade_out : stylesCustom.fade_in}`}>
            <div className={isPlay ? stylesCustom.overlay : null} style={{ justifyContent: "center", display: "flex", flexDirection: "column", alignItems: "center" }}>
              <h3 className={stylesCustom.mini_card}>Tekan Tombol diatas untuk memutar suara</h3>
            </div>
          </div> */}

          <audio ref={AudioSoundRef} controls src={"/assets/items/" + kategori + "/sound/" + quizData[indexQuestion]?.name + ".mp3"} style={{ display: "none" }} onEnded={stopSound()}>
            Your browser does not support the
            <code>audio</code> element.
          </audio>
          {/* <Modal></Modal> */}
        </main>
      ) : (
        <main className={styles.main}>
          <h1 className={styles.title}>Memuat Permainan...</h1>
        </main>
      )}
    </div>
  );
}

const Modal = (props) => {
  return (
    <motion.div
      initial={{
        opacity: 0,
        scale: 0,
      }}
      animate={{
        opacity: 1,
        scale: 1,
      }}
      className={stylesCustom.popup_backdrop}
    >
      <motion.div className={stylesCustom.popup}>
        <motion.h3 className={`${stylesCustom.mini_card_popupRW}`} style={{ color: "green" }}>
          Benar
        </motion.h3>
        <motion.div className={stylesCustom.pu_content_container}>
          <motion.div
            initial={{
              scale: 0,
              rotate: 0,
            }}
            animate={{
              scale: 1,
              rotate: 360,
              transition: {
                delay: 0.3,
                duration: 0.5,
              },
            }}
            style={{ justifyContent: "center", display: "flex", flexDirection: "column", alignItems: "center" }}
          >
            <Image
              onClick={() => {
                playSound();
              }}
              src={"/assets/button_play.png"}
              width={200}
              height={200}
              alt="PlayButton"
              style={{ cursor: "pointer" }}
            />
            {/* <h3 className={stylesCustom.mini_card}>Tekan Tombol diatas untuk memutar suara</h3> */}
          </motion.div>
        </motion.div>
        {/* button controls */}
        <motion.div style={{ marginTop: "10px" }}>
          <motion.button className="btn btn-primary">Soal Selanjutnya</motion.button>
        </motion.div>
      </motion.div>
    </motion.div>
  );
};

export const getServerSideProps = async (context) => {
  console.log(context.query.categor);
  if (context.query.category !== undefined) {
    var kategori_data = getJSONFlash(context.query.category);

    return {
      props: { kategori_data: kategori_data },
    };
  } else {
    return {
      redirect: {
        destination: "/play",
        permanent: false,
      },
    };
  }
};
